--- Object-oriented programming (OOP) ---
-----------------------------------------
--- Terminology ---

CLASS -- a template (shape of an OBJECT)
Defines the abstract characteristics of a thing (object), including the thing's characteristics (its attributes, fields or properties) and the thing's behaviours (the things it can do, or methods, operations or fetures). One might say that a class is a blueprint or factory that describes the nature of something. For example, the class Dog would consist of traits shared by all dogs, such as breed and fur color (characteristics), and the ability to bark and sit (behaviors).
CLASS'es - str, int, list, dict, float, soup etc.

METHOD (or Message) -- A defined capability of a CLASS ( dir(object) - capabilities of object )
An object's abilities. In language, methods are verbs. Lassie, being a Dog, has the ability to bark. so bark() is one of Lassie's methods. She may have other methods as well, for example sit() or eat(). Within the program,using a method usually affects only one particular object; all Dogs can bark, but you need only one particular Dog to do the barking.
METHODs are these things that are functions built into OBJECT's. Method is a part of defining a class, it's also part of the object. And that is things like string.upper(), string.startswith(), string.find(), those are all METHODs in the string CLASS. But they also are part of every string OBJECT.

ATTRIBUTE (or field) -- a bit of data in CLASS

OBJECT (or Instance) -- A particular instance of a CLASS (A real OBJECT, not the shape of the OBJECT)
One can have an instance of a class or a particular object. The instance is the actual object crated at runtime (Lassie object is an instance of the Dog class). The set of values of the attributes of a particularobject is called its state. The object consists of state and the behaviour that's defined in the object's class.
OBJECT's - str, int, list, dict, float, soup etc.
An OBJECT is a bit of self-conatined code and data
A key aspect of the OBJECT approach is to break the problem into smaller understandable parts.
From outside looking in (OBJECT), you ignore the detail. From inside looking out, you ignore the outer detail
-----------------------------------------
--- Object Lifecycle ---
• Objects are created, used and discarged
• We have special blocks of code (methods) that get called
  • At the moment of creation (constructor) *used a lot
  • At the moment of destruction (destructor) *seldom used

In OOP, a constructor in a class is a special block of statements called when an object is created
================================================================================

ASCII - American Standard Code for Information Interchange

UTF-8 - Unicode Transformation Format 1-4 bytes (UTF-8 is recommended practice for encoding data to be exchanged between systems)

XML - eXtensible Markup Language is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable.
